/*  Problem 2

    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import (
	"fmt"
)

func main() {

	fmt.Println("Problem 002")
	fibs := fib(4000000)
	fmt.Println(fibs)
	sum := 0
	for _, num := range fibs {
		sum += num
	}
	fmt.Println(sum)

}

func fib(max int) []int {
	a, b := 1, 2
	fibs := make([]int, 0)
	for b < max {
		if b%2 == 0 {
			fibs = append(fibs, b)
		}
		a, b = b, a+b
	}
	return fibs
}
